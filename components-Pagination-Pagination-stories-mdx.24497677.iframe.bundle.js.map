{"version":3,"file":"components-Pagination-Pagination-stories-mdx.24497677.iframe.bundle.js","mappings":";;AAuCA;;AAMA;;ACrBA;;AAKA;;AAIA;;;;AAIA;;;;;;AAMA;;;;AAIA;;;AAGA;AAGA;;AAgBA;AAIA;AACA;;;;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;AAKA;AAKA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAGA;AAGA;AAEA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAGA;AAGA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;AAQA;;;;AAKA;;;;AAQA;AASA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;AAUA;;AAUA;;AAGA;;AAGA;;AAMA;;;AClUA;;;AAIA;AAOA;AACA;;;AAKA;AACA;AACA;;AAIA;AAuBA;AACA;AAmHA;AACA","sources":["webpack://@lokalise/louis/./src/components/Pagination/styles.ts","webpack://@lokalise/louis/./src/components/Button/styles.ts","webpack://@lokalise/louis/./src/components/Select/styles.ts"],"sourcesContent":["import { css, styled, variants } from '@lokalise/styled';\n\nimport { withLinkStyle } from '../../utils/styles';\nimport { spacing, typography, value } from '../../utils/theme';\nimport { Input } from '../Input';\n\nexport const Container = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n`;\n\nexport const Content = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tfont-family: ${value('font.family.default')};\n`;\n\nexport const InputWrapper = styled.div`\n\twidth: 55px;\n`;\n\nexport const StyledInput = styled(Input)`\n\tmin-width: 40px;\n`;\n\nexport const Text = styled.div`\n\t${typography('body.caption.default')};\n\tpadding: ${spacing(2)};\n\tcolor: ${value('color.text.light.default')};\n`;\n\nexport const ButtonWrapper = styled.div<{ $visible: boolean }>`\n\t${variants(({ $visible }) => ($visible ? 'visible' : 'hidden'), {\n\t\tvisible: css`\n\t\t\tvisibility: visible;\n\t\t`,\n\t\thidden: css`\n\t\t\tvisibility: hidden;\n\t\t`,\n\t})}\n`;\n\nexport const Anchor = styled.button`\n\t${withLinkStyle};\n\t${typography('body.caption.default')}\n\tborder: none;\n\tpadding-left: ${spacing(2)};\n`;\n","import { css, type CssDeclaration, modifier, styled, variants } from '@lokalise/styled';\n\nimport { LoadingSignIcon } from '../../foundations/icons';\nimport { spacing, typography, value } from '../../utils/theme';\nimport { Pressable } from '../Pressable';\n\nexport type Size = 'xs' | 'sm' | 'md' | 'lg';\nexport type Appearance = 'accent' | 'danger' | 'warning';\nexport type Variant = 'primary' | 'secondary' | 'tertiary';\n\ntype ButtonProps = {\n\t$size: Size;\n\t$variant: Variant;\n\t$appearance: Appearance;\n\t$active: boolean;\n\tdisabled: boolean;\n\t$isLoading: boolean;\n};\n\nconst isDisabledModifier = (style: CssDeclaration<ButtonProps>) =>\n\tmodifier(\n\t\t({ $isLoading }: ButtonProps) => !$isLoading,\n\t\tcss<ButtonProps>`\n\t\t\t&:disabled {\n\t\t\t\t${style}\n\t\t\t}\n\t\t`,\n\t);\n\nexport const defineAppearance = (\n\tinput: Record<'idle' | 'hover' | 'active' | 'disabled', CssDeclaration<ButtonProps>>,\n) => css<ButtonProps>`\n\t// Idle\n\t${input.idle};\n\n\t// Hover\n\t&:hover:not([disabled]):not([aria-expanded='true']) {\n\t\t${input.hover};\n\t}\n\n\t// Pressed\n\t&:active:not([disabled]):not([aria-expanded='true']),\n\t&:focus:active:not([disabled]):not([aria-expanded='true']) {\n\t\t${input.active};\n\t}\n\n\t// Activated\n\t${modifier('$active', input.active)};\n\n\t// Disabled\n\t${isDisabledModifier(input.disabled)}\n`;\n\nexport const Container = styled(Pressable)<ButtonProps>`\n\tdisplay: inline-flex;\n\talign-items: center;\n\tbackground-color: transparent;\n\tborder: ${value('size.border.button.default')} solid transparent;\n\ttext-decoration: none;\n\tvertical-align: middle;\n\tborder-radius: ${value('radius.m')};\n\tcursor: pointer;\n\tposition: relative;\n\ttransition: all ${value('motion.speed.1')};\n\tbox-sizing: border-box;\n\tfont-family: ${value('font.family.default')};\n\n\t${isDisabledModifier(css`\n\t\tcursor: not-allowed;\n\t`)};\n\n\t${variants('$size', {\n\t\txs: css`\n\t\t\tpadding: ${spacing(0, 2)};\n\t\t\theight: ${value('size.height.button.extra-small')};\n\t\t\tfont-size: 11px;\n\t\t\tline-height: 12px;\n\t\t\tfont-weight: 400;\n\t\t`,\n\t\tsm: css`\n\t\t\tpadding: ${spacing(0, 3)};\n\t\t\theight: ${value('size.height.button.small')};\n\t\t\t${typography('body.action.small')};\n\t\t\tborder-radius: ${value('radius.button.small')};\n\t\t`,\n\t\tmd: css`\n\t\t\tpadding: ${spacing(0, 3)};\n\t\t\theight: ${value('size.height.button.default')};\n\t\t\t${typography('body.action.base')};\n\t\t\tborder-radius: ${value('radius.button.default')};\n\t\t`,\n\t\tlg: css`\n\t\t\tpadding: ${spacing(0, 4)};\n\t\t\theight: ${value('size.height.button.large')};\n\t\t\tfont-size: 18px;\n\t\t\tline-height: 20px;\n\t\t\tfont-weight: 400;\n\t\t`,\n\t})}\n\n\t${variants('$appearance', {\n\t\taccent: defineAppearance({\n\t\t\tidle: css`\n\t\t\t\t--button-appearance-primary-text-color: ${value('color.text.button.accent.primary.default')};\n\t\t\t\t--button-appearance-primary-background-color: ${value(\n\t\t\t\t\t'color.background.button.accent.primary.default',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-primary-border-color: ${value('color.border.button.accent.primary.default')};\n\t\t\t\t--button-appearance-secondary-text-color: ${value('color.text.button.accent.secondary.default')};\n\t\t\t\t--button-appearance-secondary-background-color: ${value(\n\t\t\t\t\t'color.background.button.accent.secondary.default',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-secondary-border-color: ${value('color.border.button.accent.secondary.default')};\n\t\t\t\t--button-appearance-tertiary-text-color: ${value('color.text.button.accent.tertiary.default')};\n\t\t\t\t--button-appearance-tertiary-background-color: ${value(\n\t\t\t\t\t'color.background.button.accent.tertiary.default',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-tertiary-border-color: ${value('color.border.button.accent.tertiary.default')};\n\t\t\t`,\n\t\t\thover: css`\n\t\t\t\t--button-appearance-primary-text-color: ${value('color.text.button.accent.primary.hover')};\n\t\t\t\t--button-appearance-primary-background-color: ${value('color.background.button.accent.primary.hover')};\n\t\t\t\t--button-appearance-primary-border-color: ${value('color.border.button.accent.primary.hover')};\n\t\t\t\t--button-appearance-secondary-text-color: ${value('color.text.button.accent.secondary.hover')};\n\t\t\t\t--button-appearance-secondary-background-color: ${value(\n\t\t\t\t\t'color.background.button.accent.secondary.hover',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-secondary-border-color: ${value('color.border.button.accent.secondary.hover')};\n\t\t\t\t--button-appearance-tertiary-text-color: ${value('color.text.button.accent.tertiary.hover')};\n\t\t\t\t--button-appearance-tertiary-background-color: ${value(\n\t\t\t\t\t'color.background.button.accent.tertiary.hover',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-tertiary-border-color: ${value('color.border.button.accent.tertiary.hover')};\n\t\t\t`,\n\t\t\tactive: css`\n\t\t\t\t--button-appearance-primary-text-color: ${value('color.text.button.accent.primary.pressed')};\n\t\t\t\t--button-appearance-primary-background-color: ${value(\n\t\t\t\t\t'color.background.button.accent.primary.pressed',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-primary-border-color: ${value('color.border.button.accent.primary.pressed')};\n\t\t\t\t--button-appearance-secondary-text-color: ${value('color.text.button.accent.secondary.pressed')};\n\t\t\t\t--button-appearance-secondary-background-color: ${value(\n\t\t\t\t\t'color.background.button.accent.secondary.pressed',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-secondary-border-color: ${value('color.border.button.accent.secondary.pressed')};\n\t\t\t\t--button-appearance-tertiary-text-color: ${value('color.text.button.accent.tertiary.pressed')};\n\t\t\t\t--button-appearance-tertiary-background-color: ${value(\n\t\t\t\t\t'color.background.button.accent.tertiary.pressed',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-tertiary-border-color: ${value('color.border.button.accent.tertiary.pressed')};\n\t\t\t`,\n\t\t\tdisabled: css`\n\t\t\t\t--button-appearance-primary-text-color: ${value('color.text.button.accent.primary.disabled')};\n\t\t\t\t--button-appearance-primary-background-color: ${value(\n\t\t\t\t\t'color.background.button.accent.primary.disabled',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-primary-border-color: ${value('color.border.button.accent.primary.disabled')};\n\t\t\t\t--button-appearance-secondary-text-color: ${value('color.text.button.accent.secondary.disabled')};\n\t\t\t\t--button-appearance-secondary-background-color: ${value(\n\t\t\t\t\t'color.background.button.accent.secondary.disabled',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-secondary-border-color: ${value('color.border.button.accent.secondary.disabled')};\n\t\t\t\t--button-appearance-tertiary-text-color: ${value('color.text.button.accent.tertiary.disabled')};\n\t\t\t\t--button-appearance-tertiary-background-color: ${value(\n\t\t\t\t\t'color.background.button.accent.tertiary.disabled',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-tertiary-border-color: ${value('color.border.button.accent.tertiary.disabled')};\n\t\t\t`,\n\t\t}),\n\t\tdanger: defineAppearance({\n\t\t\tidle: css`\n\t\t\t\t--button-appearance-primary-text-color: ${value('color.text.button.danger.primary.default')};\n\t\t\t\t--button-appearance-primary-background-color: ${value(\n\t\t\t\t\t'color.background.button.danger.primary.default',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-primary-border-color: ${value('color.border.button.danger.primary.default')};\n\t\t\t\t--button-appearance-secondary-text-color: ${value('color.text.button.danger.secondary.default')};\n\t\t\t\t--button-appearance-secondary-background-color: ${value(\n\t\t\t\t\t'color.background.button.danger.secondary.default',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-secondary-border-color: ${value('color.border.button.danger.secondary.default')};\n\t\t\t\t--button-appearance-tertiary-text-color: ${value('color.text.button.danger.tertiary.default')};\n\t\t\t\t--button-appearance-tertiary-background-color: ${value(\n\t\t\t\t\t'color.background.button.danger.tertiary.default',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-tertiary-border-color: ${value('color.border.button.danger.tertiary.default')};\n\t\t\t`,\n\t\t\thover: css`\n\t\t\t\t--button-appearance-primary-text-color: ${value('color.text.button.danger.primary.hover')};\n\t\t\t\t--button-appearance-primary-background-color: ${value('color.background.button.danger.primary.hover')};\n\t\t\t\t--button-appearance-primary-border-color: ${value('color.border.button.danger.primary.hover')};\n\t\t\t\t--button-appearance-secondary-text-color: ${value('color.text.button.danger.secondary.hover')};\n\t\t\t\t--button-appearance-secondary-background-color: ${value(\n\t\t\t\t\t'color.background.button.danger.secondary.hover',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-secondary-border-color: ${value('color.border.button.danger.secondary.hover')};\n\t\t\t\t--button-appearance-tertiary-text-color: ${value('color.text.button.danger.tertiary.hover')};\n\t\t\t\t--button-appearance-tertiary-background-color: ${value(\n\t\t\t\t\t'color.background.button.danger.tertiary.hover',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-tertiary-border-color: ${value('color.border.button.danger.tertiary.hover')};\n\t\t\t`,\n\t\t\tactive: css`\n\t\t\t\t--button-appearance-primary-text-color: ${value('color.text.button.danger.primary.pressed')};\n\t\t\t\t--button-appearance-primary-background-color: ${value(\n\t\t\t\t\t'color.background.button.danger.primary.pressed',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-primary-border-color: ${value('color.border.button.danger.primary.pressed')};\n\t\t\t\t--button-appearance-secondary-text-color: ${value('color.text.button.danger.secondary.pressed')};\n\t\t\t\t--button-appearance-secondary-background-color: ${value(\n\t\t\t\t\t'color.background.button.danger.secondary.pressed',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-secondary-border-color: ${value('color.border.button.danger.secondary.pressed')};\n\t\t\t\t--button-appearance-tertiary-text-color: ${value('color.text.button.danger.tertiary.pressed')};\n\t\t\t\t--button-appearance-tertiary-background-color: ${value(\n\t\t\t\t\t'color.background.button.danger.tertiary.pressed',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-tertiary-border-color: ${value('color.border.button.danger.tertiary.pressed')};\n\t\t\t`,\n\t\t\tdisabled: css`\n\t\t\t\t--button-appearance-primary-text-color: ${value('color.text.button.danger.primary.disabled')};\n\t\t\t\t--button-appearance-primary-background-color: ${value(\n\t\t\t\t\t'color.background.button.danger.primary.disabled',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-primary-border-color: ${value('color.border.button.danger.primary.disabled')};\n\t\t\t\t--button-appearance-secondary-text-color: ${value('color.text.button.danger.secondary.disabled')};\n\t\t\t\t--button-appearance-secondary-background-color: ${value(\n\t\t\t\t\t'color.background.button.danger.secondary.disabled',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-secondary-border-color: ${value('color.border.button.danger.secondary.disabled')};\n\t\t\t\t--button-appearance-tertiary-text-color: ${value('color.text.button.danger.tertiary.disabled')};\n\t\t\t\t--button-appearance-tertiary-background-color: ${value(\n\t\t\t\t\t'color.background.button.danger.tertiary.disabled',\n\t\t\t\t)};\n\t\t\t\t--button-appearance-tertiary-border-color: ${value('color.border.button.danger.tertiary.disabled')};\n\t\t\t`,\n\t\t}),\n\t\twarning: defineAppearance({\n\t\t\tidle: css`\n\t\t\t\t--button-appearance-primary-text-color: ${value('color.deprecated.content.buttonText2')};\n\t\t\t\t--button-appearance-primary-background-color: ${value('color.deprecated.interactive.yellow.idle')};\n\t\t\t\t--button-appearance-primary-border-color: transparent;\n\t\t\t\t--button-appearance-secondary-text-color: ${value('color.deprecated.interactive.yellow.idle')};\n\t\t\t\t--button-appearance-secondary-background-color: ${value('color.background.transparent')};\n\t\t\t\t--button-appearance-secondary-border-color: ${value('color.deprecated.interactive.yellow.idle')};\n\t\t\t\t--button-appearance-tertiary-text-color: ${value('color.deprecated.interactive.yellow.idle')};\n\t\t\t\t--button-appearance-tertiary-background-color: ${value('color.background.transparent')};\n\t\t\t\t--button-appearance-tertiary-border-color: transparent;\n\t\t\t`,\n\t\t\thover: css`\n\t\t\t\t--button-appearance-primary-background-color: ${value('color.deprecated.interactive.yellow.hover')};\n\t\t\t\t--button-appearance-secondary-text-color: ${value('color.deprecated.interactive.yellow.hover')};\n\t\t\t\t--button-appearance-secondary-border-color: ${value('color.deprecated.interactive.yellow.hover')};\n\t\t\t\t--button-appearance-tertiary-text-color: ${value('color.deprecated.interactive.yellow.hover')};\n\t\t\t`,\n\t\t\tactive: css`\n\t\t\t\t--button-appearance-primary-background-color: ${value('color.deprecated.interactive.yellow.hover')};\n\t\t\t\t--button-appearance-secondary-text-color: ${value('color.deprecated.interactive.yellow.hover')};\n\t\t\t\t--button-appearance-secondary-border-color: ${value('color.deprecated.interactive.yellow.hover')};\n\t\t\t\t--button-appearance-tertiary-text-color: ${value('color.deprecated.interactive.yellow.hover')};\n\t\t\t`,\n\t\t\tdisabled: css`\n\t\t\t\t--button-appearance-primary-text-color: ${value('color.text.disabled')};\n\t\t\t\t--button-appearance-primary-background-color: ${value('color.background.disabled')};\n\t\t\t\t--button-appearance-secondary-text-color: ${value('color.text.disabled')};\n\t\t\t\t--button-appearance-secondary-background-color: ${value('color.background.disabled')};\n\t\t\t\t--button-appearance-tertiary-text-color: ${value('color.text.disabled')};\n\t\t\t\t--button-appearance-tertiary-background-color: ${value('color.background.disabled')};\n\t\t\t`,\n\t\t}),\n\t})};\n\n\t${variants('$variant', {\n\t\tprimary: css<ButtonProps>`\n\t\t\tbackground-color: var(--button-appearance-primary-background-color);\n\t\t\tborder-color: var(--button-appearance-primary-border-color);\n\t\t\tcolor: var(--button-appearance-primary-text-color);\n\t\t`,\n\t\tsecondary: css<ButtonProps>`\n\t\t\tbackground-color: var(--button-appearance-secondary-background-color);\n\t\t\tborder-color: var(--button-appearance-secondary-border-color);\n\t\t\tcolor: var(--button-appearance-secondary-text-color);\n\t\t`,\n\t\ttertiary: css<ButtonProps>`\n\t\t\tbackground-color: var(--button-appearance-tertiary-background-color);\n\t\t\tborder-color: var(--button-appearance-tertiary-border-color);\n\t\t\tcolor: var(--button-appearance-tertiary-text-color);\n\t\t`,\n\t})};\n`;\n\nexport const Content = styled.span<{ $isHidden: boolean; $size: Size }>`\n\tdisplay: flex;\n\tflex-flow: row nowrap;\n\talign-items: center;\n\tjustify-content: center;\n\twidth: 100%;\n\n\t${variants('$size', {\n\t\txs: css`\n\t\t\tgap: ${spacing(1)};\n\t\t`,\n\t\tsm: css`\n\t\t\tgap: ${spacing(2)};\n\t\t`,\n\t\tmd: css`\n\t\t\tgap: ${spacing(2)};\n\t\t`,\n\t\tlg: css`\n\t\t\tgap: ${spacing(2)};\n\t\t`,\n\t})}\n\n\t${modifier(\n\t\t'$isHidden',\n\t\tcss`\n\t\t\topacity: 0;\n\t\t`,\n\t)}\n`;\n\nexport const Text = styled.span<{ $size: Size }>`\n\tposition: relative;\n\talign-items: center;\n\tdisplay: inline-flex;\n\twhite-space: nowrap;\n\n\t${variants('$size', {\n\t\txs: css`\n\t\t\ttop: 0;\n\t\t`,\n\t\tsm: css`\n\t\t\ttop: 0;\n\t\t`,\n\t\tmd: css`\n\t\t\ttop: 0;\n\t\t`,\n\t\tlg: css`\n\t\t\ttop: -1px; // Make text visually centered\n\t\t`,\n\t})}\n`;\n\nexport const StyledLoadingSign = styled(LoadingSignIcon)`\n\tfont-size: 1.3em;\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n`;\n","import { css, styled } from '@lokalise/styled';\nimport type { Ref } from 'react';\nimport Select from 'react-select';\nimport type { GroupBase, OptionProps, SelectInstance, StylesConfig } from 'react-select';\n\nimport type { SelectProps } from './Select';\nimport { CloseIcon } from '../../foundations/icons';\nimport type { Theme } from '../../foundations/themes';\nimport {\n\toneLineEllipsis,\n\twithInputContainerStyle,\n\twithInputDisabledStyle,\n\twithInputFieldStyle,\n} from '../../utils/styles';\nimport { spacing, typography, value } from '../../utils/theme';\n\nexport const focusOutlineVisibilityClassName = 'LouisSelect-focus_outline_should_be_visible';\n\nconst multiValueLabel = css`\n\t// Padding is added, so MultiValueLabel Item text, could be seen in full size\n\tpadding: 1px;\n\tcolor: ${value('color.text.default')};\n\tfont-size: 14px;\n\tline-height: 15px;\n`;\nexport const MultiValueLabelText = styled.div`\n\t${oneLineEllipsis};\n\t${multiValueLabel};\n\tmax-width: 200px;\n`;\n\nconst multiValueContainer = css`\n\tbackground-color: ${value('color.background.surface.fore')};\n\tborder-radius: ${value('radius.m')};\n\tpadding: 1px;\n\tmargin: 0;\n`;\n\nconst multiValue = css`\n\t${multiValueContainer};\n\t${multiValueLabel};\n\tpadding: 5px;\n`;\n\nexport const MultiValueMore = styled.div`\n\t${multiValue}\n`;\n\nexport const MultiValueMoreTooltipContent = styled.div`\n\tmax-width: 200px;\n`;\n\nexport const StyledSelect = styled(Select)`\n\t${typography('body.small.default')};\n\twidth: 100%;\n\n\t.Select__option {\n\t\tfont-family: ${value('font.family.default')};\n\t}\n\n\t.Select__option--is-disabled {\n\t\tcolor: ${value('color.text.disabled')};\n\t\tcursor: not-allowed;\n\t}\n\n\t.Select__control {\n\t\t${() => /* stupid hack to get rid of some type errors */ css`\n\t\t\t${withInputContainerStyle}\n\t\t`};\n\t\theight: unset;\n\t\tline-height: unset;\n\t\tmin-height: ${value('size.height.input.default')};\n\t\tpadding: 0;\n\t}\n\t.Select__control--is-focused,\n    /* This second selector is required to make sure hover rule is not overriding focus */\n    .Select__control--is-focused:hover {\n\t\tborder-color: ${value('color.border.active')};\n\t\toutline: none;\n\t\tbox-shadow: none;\n\t}\n\t.Select__control--is-disabled {\n\t\t${withInputDisabledStyle};\n\n\t\t.Select__placeholder {\n\t\t\tcolor: ${value('color.text.disabled')};\n\t\t}\n\n\t\t.Select__multi-value__label {\n\t\t\tpadding: 2.5px 8px;\n\t\t}\n\t}\n\t.Select__multi-value {\n\t\t${multiValueContainer}\n\t}\n\n\t.Select__multi-value__remove svg {\n\t\tcolor: ${value('color.text.light.default')};\n\t\tfill: currentColor;\n\t\tcursor: pointer;\n\t}\n\t.Select__multi-value__remove:hover {\n\t\tbackground-color: transparent;\n\t\tsvg {\n\t\t\tbackground-color: transparent;\n\t\t\tcolor: ${value('color.text.link.hover')};\n\t\t}\n\t}\n\t.Select__multi-value__remove svg {\n\t\twidth: 16px;\n\t\theight: 16px;\n\t}\n\t.Select__menu-notice--no-options {\n\t\tfont-family: ${value('font.family.default')};\n\t}\n\t.Select__indicator {\n\t\tpadding: 6px 8px;\n\t}\n\t.Select__input-container {\n\t\toverflow: hidden;\n\t}\n\t&&& .Select__input {\n\t\tfont-size: 14px;\n\t\tline-height: 16px;\n\t\tcolor: ${value('color.text.default')};\n\n\t\t&:focus {\n\t\t\toutline: none !important;\n\t\t}\n\t}\n\t.Select__indicators {\n\t\tcolor: ${value('color.border.input.default')};\n\t}\n\t.Select__clear-indicator,\n\t.Select__dropdown-indicator,\n\t.Select__clear-indicator svg,\n\t.Select__dropdown-indicator svg {\n\t\tcursor: pointer;\n\t\tcolor: currentColor;\n\t\tfill: currentColor;\n\t}\n\t.Select__clear-indicator {\n\t\tpadding: 0px;\n\t\tmargin-right: 4px;\n\t\tfont-size: 16px;\n\t\theight: 16px;\n\t}\n\t.Select__dropdown-indicator {\n\t\tpadding: 0px 12px 0px 0px;\n\t\tfont-size: 24px;\n\t\theight: 24px;\n\t}\n\t&:not(.Select--is-disabled) {\n\t\t.Select__clear-indicator:hover {\n\t\t\tcolor: ${value('color.text.link.hover')};\n\t\t}\n\t\t&:hover,\n\t\t[data-dev-state='hover'] & {\n\t\t\t.Select__dropdown-indicator {\n\t\t\t\tcolor: ${value('color.border.input.hover')};\n\t\t\t}\n\t\t}\n\t\t[data-dev-state='focus'] & .Select__dropdown-indicator,\n\t\t.Select__control--menu-is-open .Select__dropdown-indicator {\n\t\t\ttransform: scaleY(-1);\n\t\t\tcolor: ${value('color.border.active')};\n\t\t}\n\t}\n\t.Select__placeholder,\n\t.Select__single-value {\n\t\tfont-size: 14px;\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tcolor: ${value('color.text.input.placeholder')};\n\t}\n\t.Select__single-value {\n\t\tcolor: ${value('color.text.default')};\n\t}\n\t.Select__indicator-separator {\n\t\tdisplay: none;\n\t}\n\t.Select__value-container {\n\t\t${() => /* stupid hack to get rid of some type errors */ css`\n\t\t\t${withInputFieldStyle}\n\t\t`};\n\n\t\tpadding: 4px 12px;\n\t}\n\t.Select__value-container--is-multi {\n\t\tgap: ${spacing(1)};\n\t\tpadding: ${spacing(1, 2)};\n\t}\n` as <\n\tAsync extends boolean,\n\tCreatable extends boolean,\n\tOptionType,\n\tIsMulti extends boolean = false,\n\tGroupType extends GroupBase<OptionType> = GroupBase<OptionType>,\n>(\n\tprops: SelectProps<Async, Creatable, OptionType, IsMulti, GroupType> & {\n\t\tref?: Ref<SelectInstance>;\n\t},\n) => ReturnType<typeof Select>;\n\nexport const Container = styled.div`\n\twidth: 100%;\n\tdisplay: grid;\n\tgap: ${spacing(1)};\n\tgrid-template-columns: minmax(50px, 1fr); /* This ensures Select doesn't overflow 100% */\n\n\t&:has(.Select--is-disabled) {\n\t\tcursor: not-allowed;\n\t}\n\n\t// While using keyboard navigation, show active background on focused option\n\t&.${focusOutlineVisibilityClassName} .Select__option--is-focused {\n\t\tbackground-color: ${value('color.background.active')};\n\t}\n\n\t// While hovering, only show active background on hovered option, do not show active background on focused option\n\t&:not(.${focusOutlineVisibilityClassName}) .Select__menu:hover .Select__option:not(.Select__option--is-disabled) {\n\t\tbackground-color: ${value('color.background.input.default')};\n\t}\n\t&:not(.${focusOutlineVisibilityClassName}) .Select__menu .Select__option:hover:not(.Select__option--is-disabled) {\n\t\tbackground-color: ${value('color.background.active')};\n\t}\n`;\n\nexport const StyledCloseIcon = styled(CloseIcon)`\n\tpointer-events: inherit;\n\n\t* {\n\t\tpointer-events: inherit;\n\t}\n`;\n\nexport const RemoveButtonContainer = styled.div`\n\tdisplay: flex;\n`;\n\n/**\n * First of all, this is the recommended way to apply custom styling to react-select component. But it's quite\n * inconvenient for use because it's really hard to use our theme here. Reason we can't do\n * everything using styled components is because, when rendering menu using portal (which we need to do sometimes)\n * the parent class is lost and styles are not applied to the menu. So the solution is to style menu/options using\n * recommended solution (below) and everything else using styled components.\n */\nexport const selectStyles = (\n\ttheme: Theme,\n): StylesConfig<\n\tOptionProps & {\n\t\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\t\t__isNew__: boolean;\n\t}\n> => ({\n\tinput: (base) => ({\n\t\t...base,\n\t\tmargin: 0,\n\t\tcolor: value('color.text.default')({ theme }),\n\t\toverflow: 'hidden',\n\t}),\n\tmenu: (base) => ({\n\t\t...base,\n\t\tbackgroundColor: value('color.background.input.default')({ theme }),\n\t\tborder: `1px solid ${value('color.border.input.default')({ theme })}`,\n\t\tboxShadow: '0 0 5px rgba(0, 0, 0, 0.2)',\n\t\tmargin: spacing(1, 0, 0)({ theme }),\n\t\tzIndex: value('zIndex.dropdown')({ theme }),\n\t}),\n\tnoOptionsMessage: (base) => ({\n\t\t...base,\n\t\t...typography('body.small.default')({ theme }),\n\t\tcolor: value('color.text.disabled')({ theme }),\n\t\ttextAlign: 'left',\n\t}),\n\toption: (base, props) => ({\n\t\t...base,\n\t\tfontFamily: value('font.family.default')({ theme }),\n\t\tfontSize: '14px',\n\t\tlineHeight: '16px',\n\t\tpadding: '8px 14px 9px',\n\t\tcolor: value('color.text.default')({ theme }),\n\t\tcursor: 'pointer',\n\t\twhiteSpace: 'nowrap',\n\t\toverflow: 'hidden',\n\t\ttextOverflow: 'ellipsis',\n\t\twidth: '100%',\n\t\tminWidth: '100%',\n\t\t// eslint-disable-next-line no-underscore-dangle\n\t\t...(props.data.__isNew__ ? { color: value('color.text.active')({ theme }) } : {}),\n\t\t...(props.isSelected\n\t\t\t? {\n\t\t\t\t\tbackground: 'none',\n\t\t\t\t\tcolor: value('color.text.default')({ theme }),\n\t\t\t\t\t/**\n\t\t\t\t\t * For the selected option we originally were setting `display: flex` but combination of flex + text-overflow\n\t\t\t\t\t * was not working correctly. Instead, for the selected option, we instead have the icon to be positioned\n\t\t\t\t\t * absolutely and shift it left while simultaneously adding same amount of padding left to the selected option.\n\t\t\t\t\t *\n\t\t\t\t\t * 16px – icon width, 14px – original padding (above), 1 spacing – gap\n\t\t\t\t\t */\n\t\t\t\t\tpaddingLeft: `calc(16px + 14px + ${spacing(1)({ theme })})`,\n\t\t\t\t\t'&::before': {\n\t\t\t\t\t\twidth: 16,\n\t\t\t\t\t\theight: 16,\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t// 16px icon width + 1 spacing\n\t\t\t\t\t\tmarginLeft: `calc(-16px - ${spacing(1)({ theme })})`,\n\t\t\t\t\t\tcontent: '\"\"',\n\t\t\t\t\t\tflex: '0 0 auto',\n\t\t\t\t\t\tverticalAlign: 'middle',\n\t\t\t\t\t\tbackgroundSize: '16px 16px',\n\t\t\t\t\t\tbackgroundRepeat: 'no-repeat',\n\t\t\t\t\t\tbackgroundPosition: 'center',\n\t\t\t\t\t\tbackgroundImage: `url(\"data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M6.64372 10.1336L3.58684 7.07669L2.65918 8.01319L6.65255 12.0066L12.9872 5.65427L12.0507 4.71777L6.64372 10.1336Z' fill='${encodeURIComponent(\n\t\t\t\t\t\t\tvalue('color.text.default')({ theme }),\n\t\t\t\t\t\t)}'/%3E%3C/svg%3E%0A\")`,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t: undefined),\n\t\t...(props.isFocused\n\t\t\t? {\n\t\t\t\t\tbackground: value('color.background.active')({ theme }),\n\t\t\t\t\tcolor: value('color.text.default')({ theme }),\n\t\t\t\t}\n\t\t\t: undefined),\n\t}),\n\t// No access to props inside menuPortal\n\tmenuPortal: (base) => ({ ...base, zIndex: theme.zIndex.dropdownInPortal }),\n\tmenuList: (base, props) => ({ ...base, maxHeight: props.selectProps.maxMenuHeight }),\n\tvalueContainer: (base) => ({ ...base, overflow: 'hidden' }),\n});\n"],"names":[],"sourceRoot":""}